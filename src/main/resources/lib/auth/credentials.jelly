<!--
 Copyright 2013-2019 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
         xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	 xmlns:a="/lib/auth">
  <st:documentation>
    Inserts a &lt;select&gt; box for compatible Google credentials.

    <st:attribute name="title">
      A label for the credential input.
    </st:attribute>
    <st:attribute name="field">
      Used for databinding.
    </st:attribute>
  </st:documentation>
  <!--
    See the following article, which outlines some current deficiencies w.r.t.
    resolving help files colocated with jelly files.
    http://jenkins-ci.361315.n4.nabble.com/Resolution-of-help-files-in-jelly-entries-td1592533.html
    To workaround this, we simply put the help file alongside
    GoogleRobotPrivateKeyCredentials, and then invoke a static method on GRC to get the
    help file path.
  -->
  <j:invokeStatic var="elements" method="getCredentialsListBox"
           className="com.google.jenkins.plugins.credentials.oauth.GoogleRobotCredentials">
    <j:arg type="java.lang.Class" value="${descriptor.clazz}" />
  </j:invokeStatic>
  <j:choose>
    <j:when test="${!empty(elements)}">
      <j:invokeStatic var="helpFile" method="getHelpFile"
            className="com.google.jenkins.plugins.credentials.oauth.GoogleRobotPrivateKeyCredentials" />
      <f:entry title="${attrs.title}" field="${attrs.field}" help="${helpFile}">
        <select name="${attrs.field}" class="setting-input">
          <j:forEach var="item" items="${elements}">
            <f:option selected="${item.value == instance[attrs.field]}"
                      value="${item.value}">${item.name}</f:option>
          </j:forEach>
        </select>
      </f:entry>
    </j:when>
    <j:otherwise>
      <f:entry>
        <div class="error">
          ${%You must register a Google Service Account with:}
        </div>
      </f:entry>
    </j:otherwise>
    <f:description>
      <b>Scope(s):</b>
      <j:forEach var="scope" items="${elements.getScopes()}">
        <code>${scope}</code>
      </j:forEach>
    </f:description>
  </j:choose>
</j:jelly>